pipeline {
    agent any

    tools {
        maven 'M2_HOME'
    }

    environment {
        BASE_DIR = 'backendPidev'
        EMAIL_RECIPIENT = 'aymen.rahali@esprit.tn'
    }

    stages {
        stage('Checkout') {
            steps {
                //cleanWs()
                retry(3) { // Retry up to 3 times in case of failure
                    checkout([$class: 'GitSCM',
                              branches: [[name: '*/aymen']],
@@ -27,41 +26,23 @@
        stage('Clean-Compile') {
            steps {
                dir("$BASE_DIR") {
                    script {
                        try {
                            sh 'mvn clean compile'
                        } catch (Exception e) {
                            error("Clean-Compile stage failed: ${e.message}")
                        }
                    }
                    sh 'mvn clean compile'
                }
            }
        }

        stage('Test-Compile') {
            steps {
                dir("$BASE_DIR") {
                    script {
                        try {
                            sh 'mvn test-compile'
                        } catch (Exception e) {
                            error("Test-Compile stage failed: ${e.message}")
                        }
                    }
                    sh 'mvn test-compile'
                }
            }
        }

        stage('JUnit Tests') {
            steps {
                dir("$BASE_DIR") {
                    script {
                        try {
                            sh 'mvn test'
                        } catch (Exception e) {
                            error("JUnit Tests stage failed: ${e.message}")
                        }
                    }
                    sh 'mvn test'
                }
            }
            post {
@@ -74,27 +55,15 @@
        stage('Package') {
            steps {
                dir("$BASE_DIR") {
                    script {
                        try {
                            sh 'mvn package -DskipTests'
                        } catch (Exception e) {
                            error("Package stage failed: ${e.message}")
                        }
                    }
                    sh 'mvn package -DskipTests'
                }
            }
        }

        stage('Install') {
            steps {
                dir("$BASE_DIR") {
                    script {
                        try {
                            sh 'mvn install -DskipTests'
                        } catch (Exception e) {
                            error("Install stage failed: ${e.message}")
                        }
                    }
                    sh 'mvn install -DskipTests'
                }
            }
        }
@@ -103,13 +72,7 @@
            steps {
                echo 'Generating JaCoCo Report'
                dir("$BASE_DIR") {
                    script {
                        try {
                            sh 'mvn jacoco:report'
                        } catch (Exception e) {
                            error("JaCoCo Report generation failed: ${e.message}")
                        }
                    }
                    sh 'mvn jacoco:report'
                }
            }
        }
@@ -129,53 +92,45 @@
        stage('SonarQube Analysis') {
            steps {
                dir("$BASE_DIR") {
                    withCredentials([string(credentialsId: 'SONARQUBE_TOKEN_ID', variable: 'SONAR_TOKEN')]) {
                        script {
                            withSonarQubeEnv('sonar courZelo') {
                                try {
                                        sh '''
                                         mvn sonar:sonar \
                                         -Dsonar.projectKey=NewcourZelo \
                                         -Dsonar.projectName=NewcourZelo \
                                         -Dsonar.host.url=http://192.168.33.10:9006 \
                                         -Dsonar.token=sqp_691fa05196ef4835c6de1f2759810955b1e7f25a
                            '''
                                } catch (Exception e) {
                                    error("SonarQube Analysis failed: ${e.message}")
                                }
                            }
                        }
                    withSonarQubeEnv('NewcourZelo') {
                        sh '''
                            mvn sonar:sonar \
                              -Dsonar.projectKey=NewcourZelo \
                              -Dsonar.projectName=NewcourZelo \
                              -Dsonar.host.url=http://192.168.33.10:9006 \
                              -Dsonar.token=sqp_8037d660cceccd9d73d9bf8db0517d7ad99c016b
                        '''
                    }
                }
            }
        }

        /*stage ('Nexus') {
            steps {
                dir("$BASE_DIR") {
                    sh 'mvn deploy'
                }
            }
        }*/
    }

    post {
        success {
            mail to: "${env.EMAIL_RECIPIENT}",
                 subject: "Pipeline Jenkins - Success - Build #${BUILD_NUMBER}",
                 body: """Pipeline Jenkins
                 Final Report: The pipeline has completed successfully.
                 Build number: ${BUILD_NUMBER}. No action required."""
        }
        failure {
            mail to: "${env.EMAIL_RECIPIENT}",
                 subject: "Pipeline Jenkins - Failure - Build #${BUILD_NUMBER}",
                 body: """Pipeline Jenkins
                 Final Report: The pipeline has failed. Build number: ${BUILD_NUMBER}.
                 Please check the logs and take necessary actions."""
        }
        always {
            echo 'Pipeline completed.'
        }
    }
}
