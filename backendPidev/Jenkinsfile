pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials') 
        EMAIL_RECIPIENT = 'rezigui.alaa@gmail.com'


    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('GIT') {
            steps {
                git branch: 'nourchaine-test',
                    url: 'https://github.com/Si-aymen/5SAE7-G6-CourZelo.git'
            }
        }

        stage('Build') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn clean install'
                        } catch (Exception e) {
                            error "Build failed: ${e}"
                        }
                    }
                }
            }
        }
    
       /* stage('Test') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn test'
                        } catch (Exception e) {
                            error "Tests failed: ${e}"
                        }
                    }
                }
            }
        } */
     /*   stage('Generate Report') {
            steps {
                dir('backendPidev') {
                    script {
                        sh 'mvn surefire-report:report'
                    }
                }
            }
        }
    stage('SonarQube') {
            steps {
                dir("backendPidev") {
                    withSonarQubeEnv('courzello') {
                        sh "mvn sonar:sonar -Dsonar.projectKey=courzello -Dsonar.projectName='courzello' -Dsonar.host.url=http://192.168.152.130:9000 -Dsonar.token=sqp_73d71fa53703b79f59a4d13219bc994d37b802d6 -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('backendPidev') {
                    script {
                        sh 'docker build -t reziguialaa/courzelo:latest .'
                    }
                }
            }
        }
        stage('Deploy Docker Image to Docker Hub') {
            steps {
                script {
                    sh "echo ${DOCKER_CREDENTIALS_PSW} | docker login -u ${DOCKER_CREDENTIALS_USR} --password-stdin"

                    sh 'docker push reziguialaa/courzelo:latest'
                }
            }
        }
        stage('Deploy to Nexus') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn deploy'
                        } catch (Exception e) {
                            error "Deployment failed: ${e}"
                        }
                    }
                }
            }
        }  */

        stage('Run Docker Compose') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'docker-compose down'
                            sh 'docker-compose up --build -d '
                        } catch (Exception e) {
                            error "Docker Compose up failed: ${e}"
                        }
                    }
                }
            }
        }

    }
    post {
success {
            mail to: "${env.EMAIL_RECIPIENT}",
                 subject: "Pipeline Jenkins - Success - Build #${BUILD_NUMBER}",
                 body: """Pipeline Jenkins
                 Final Report: The pipeline has completed successfully.
                 Build number: ${BUILD_NUMBER}. No action required."""
        }

        
        always {
            echo 'Pipeline finished.'
            junit 'backendPidev/target/surefire-reports/*.xml'

        }
        failure {
                        mail to: "${env.EMAIL_RECIPIENT}",
                 subject: "Pipeline Jenkins - Failure - Build #${BUILD_NUMBER}",
                 body: """Pipeline Jenkins
                 Final Report: The pipeline has failed. Build number: ${BUILD_NUMBER}.
                 Please check the logs and take necessary actions."""

            echo 'Pipeline failed. Please check the logs for details.'
        }
    }
}
