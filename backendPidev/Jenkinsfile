pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn clean install'
                        } catch (Exception e) {
                            error "Build failed: ${e}"
                        }
                    }
                }
            }
        }
         stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('admin') { //  serveur SonarQube  configur√© dans Jenkins
                    sh "mvn -f backendPidev/pom.xml sonar:sonar -Dsonar.login=$SONARQUBE_TOKEN"
                }
            }
        }
        stage('Deploy to Nexus') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn deploy -s ~/.m2/settings.xml -X'
                        } catch (Exception e) {
                            error "Deployment failed: ${e}"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs for details.'
        }
    }
}
