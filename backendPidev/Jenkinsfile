pipeline {
    agent any

    tools {
        maven 'M2_HOME' // Assure-toi que 'M2_HOME' correspond au nom de l'installation Maven dans Jenkins
    }
environment {
        SONARQUBE_TOKEN = credentials('jenkins-sonar') // ID du token SonarQube 
    }

    stages {
        stage('Checkout') {
            steps {
                // Clonage du dépôt Git depuis la branche nourchaine
                git branch: 'nourchaine', url: 'https://github.com/Si-aymen/Courzelo-Devops.git'
            }
        }

        stage('Build') {
            steps {
                // Exécution de la construction Maven
                sh 'mvn -f backendPidev/pom.xml clean install'

            }
        }

        stage('Test') {
            steps {
                // Exécution des tests Maven
                sh 'mvn -f backendPidev/pom.xml clean install'

            }
        }

       stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('admin') { //  serveur SonarQube  configuré dans Jenkins
                    sh "mvn -f backendPidev/pom.xml sonar:sonar -Dsonar.login=$SONARQUBE_TOKEN"
                }
            }
        }
        
         stage('Deploy to Nexus') {
            steps {
                // Déploiement vers Nexus, en ignorant les tests
                sh 'mvn -f backendPidev/pom.xml deploy -DskipTests'
            }
        }
    }
    
    post {
        success {
            echo 'La construction et les tests ont réussi !'
        }
        failure {
            echo 'La construction a échoué. Veuillez vérifier les journaux.'
        }
    }
}
