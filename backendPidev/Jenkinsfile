pipeline {
    agent any

    tools {
        maven 'M2_HOME' // Assure-toi que 'M2_HOME' correspond au nom de l'installation Maven dans Jenkins
    }

    environment {
        // Variables nécessaires pour SonarQube
        SONARQUBE_SERVER = 'http://192.168.33.10:9000' // URL de SonarQube
        SONARQUBE_AUTH_TOKEN = credentials('sonarqube-auth-token') // Assure-toi que 'sonarqube-auth-token' correspond au jeton sauvegardé dans Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                // Clonage du dépôt Git depuis la branche nourchaine
                git branch: 'nourchaine', url: 'https://github.com/Si-aymen/Courzelo-Devops.git'
            }
        }

        stage('Build') {
            steps {
                // Exécution de la construction Maven
                sh 'mvn -f backendPidev/pom.xml clean install'

            }
        }

        stage('Test') {
            steps {
                // Exécution des tests Maven
                sh 'mvn -f backendPidev/pom.xml clean install'

            }
        }

        stage('SonarQube Analysis') {
            steps {
                // Analyse SonarQube
                sh """
                mvn -f backendPidev/pom.xml sonar:sonar \
                    -Dsonar.host.url=${SONARQUBE_SERVER} \
                    -Dsonar.login=${SONARQUBE_AUTH_TOKEN}
                """
            }
        }
    }
    
    post {
        success {
            echo 'La construction et les tests ont réussi !'
        }
        failure {
            echo 'La construction a échoué. Veuillez vérifier les journaux.'
        }
    }
}
