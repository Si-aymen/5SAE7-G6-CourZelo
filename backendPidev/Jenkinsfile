pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn clean install'
                        } catch (Exception e) {
                            error "Build failed: ${e}"
                        }
                    }
                }
            }
        }
        
        stage('SonarQube Analysis') {
    steps {
        dir('backendPidev') {
            sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=Seif2066-2066 -Dmaven.test.skip=true'
        }
    }
}
        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker Image'
                    sh 'docker build -t seifafi/courzelo:latest --build-arg JAR_FILE=target/devops-integration.jar -f backendPidev/Dockerfile backendPidev'
                }
            }
        }

       stage('Deploy Image to DockerHub') {
           steps {
               script {
                   echo 'Logging into DockerHub and Pushing Image'
                   withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                       sh 'docker login -u $seif2066 -p $201JMT4460'
                       sh 'docker push seifafi/courzelo:latest'
                   }
               }
           }
       }


        stage('Deploy to Nexus') {
            steps {
                dir('backendPidev') {
                    script {
                        try {
                            sh 'mvn deploy -s ~/.m2/settings.xml -X'
                        } catch (Exception e) {
                            error "Deployment failed: ${e}"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs for details.'
        }
    }
}
